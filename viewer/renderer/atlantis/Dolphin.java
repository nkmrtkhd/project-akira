package viewer.renderer.atlantis;

import javax.media.opengl.*;
import javax.media.opengl.glu.*;
import com.sun.opengl.util.*;

import com.sun.opengl.util.gl2.*;
import javax.media.opengl.awt.*;

/**
 * for special vectors
 */
public class Dolphin{
  GL2 gl;
  GLU glu;
  GLUT glut;

  public Dolphin(GL2 gl, GLU glu, GLUT glut){
    this.gl = gl;
    this.glu = glu;
    this.glut = glut;
    make();
  }


  int dolphin_t;
  public void showNoColor(){
    gl.glCallList( dolphin_t );
  }

  public void show(){
    float[] color={0.f, 1.f, 0.f, 1.f};
    gl.glColor4fv(color,0);
    gl.glMaterialfv(GL2.GL_FRONT_AND_BACK, GL2.GL_AMBIENT_AND_DIFFUSE,
                    color, 0 );
    gl.glCallList( dolphin_t );
  }

  void make(){
    dolphin_t = gl.glGenLists(1);
    gl.glNewList( dolphin_t, GL2.GL_COMPILE );

    gl.glPushMatrix();

    float scale=0.0003f;
    gl.glScalef(scale,scale,scale);

    gl.glTranslated(0.0, 0.0, -1500.0);

    gl.glEnable(GL2.GL_CULL_FACE);

    Dolphin014();
    Dolphin010();
    Dolphin009();
    Dolphin012();
    Dolphin013();
    Dolphin006();
    Dolphin002();
    Dolphin001();
    Dolphin003();
    Dolphin015();
    Dolphin004();
    Dolphin005();
    Dolphin007();
    Dolphin008();
    Dolphin011();
    Dolphin016();

    gl.glDisable(GL2.GL_CULL_FACE);
    gl.glPopMatrix();
    gl.glEndList();


  }
  void Dolphin001(){
    gl.glNormal3fv(N071,0);
    gl.glBegin(GL2.GL_POLYGON);
    gl.glVertex3fv(P001,0);
    gl.glVertex3fv(P068,0);
    gl.glVertex3fv(P010,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glVertex3fv(P068,0);
    gl.glVertex3fv(P076,0);
    gl.glVertex3fv(P010,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glVertex3fv(P068,0);
    gl.glVertex3fv(P070,0);
    gl.glVertex3fv(P076,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glVertex3fv(P076,0);
    gl.glVertex3fv(P070,0);
    gl.glVertex3fv(P074,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glVertex3fv(P070,0);
    gl.glVertex3fv(P072,0);
    gl.glVertex3fv(P074,0);
    gl.glEnd();
    gl.glNormal3fv(N119,0);
    gl.glBegin(GL2.GL_POLYGON);
    gl.glVertex3fv(P072,0);
    gl.glVertex3fv(P070,0);
    gl.glVertex3fv(P074,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glVertex3fv(P074,0);
    gl.glVertex3fv(P070,0);
    gl.glVertex3fv(P076,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glVertex3fv(P070,0);
    gl.glVertex3fv(P068,0);
    gl.glVertex3fv(P076,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glVertex3fv(P076,0);
    gl.glVertex3fv(P068,0);
    gl.glVertex3fv(P010,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glVertex3fv(P068,0);
    gl.glVertex3fv(P001,0);
    gl.glVertex3fv(P010,0);
    gl.glEnd();
  }

  void Dolphin002(){
    gl.glNormal3fv(N071,0);
    gl.glBegin(GL2.GL_POLYGON);
    gl.glVertex3fv(P011,0);
    gl.glVertex3fv(P001,0);
    gl.glVertex3fv(P009,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glVertex3fv(P075,0);
    gl.glVertex3fv(P011,0);
    gl.glVertex3fv(P009,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glVertex3fv(P069,0);
    gl.glVertex3fv(P011,0);
    gl.glVertex3fv(P075,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glVertex3fv(P069,0);
    gl.glVertex3fv(P075,0);
    gl.glVertex3fv(P073,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glVertex3fv(P071,0);
    gl.glVertex3fv(P069,0);
    gl.glVertex3fv(P073,0);
    gl.glEnd();
    gl.glNormal3fv(N119,0);
    gl.glBegin(GL2.GL_POLYGON);
    gl.glVertex3fv(P001,0);
    gl.glVertex3fv(P011,0);
    gl.glVertex3fv(P009,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glVertex3fv(P009,0);
    gl.glVertex3fv(P011,0);
    gl.glVertex3fv(P075,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glVertex3fv(P011,0);
    gl.glVertex3fv(P069,0);
    gl.glVertex3fv(P075,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glVertex3fv(P069,0);
    gl.glVertex3fv(P073,0);
    gl.glVertex3fv(P075,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glVertex3fv(P069,0);
    gl.glVertex3fv(P071,0);
    gl.glVertex3fv(P073,0);
    gl.glEnd();
  }

  void
    Dolphin003()
  {
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N018,0);
    gl.glVertex3fv(P018,0);
    gl.glNormal3fv(N001,0);
    gl.glVertex3fv(P001,0);
    gl.glNormal3fv(N019,0);
    gl.glVertex3fv(P019,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N019,0);
    gl.glVertex3fv(P019,0);
    gl.glNormal3fv(N001,0);
    gl.glVertex3fv(P001,0);
    gl.glNormal3fv(N012,0);
    gl.glVertex3fv(P012,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N017,0);
    gl.glVertex3fv(P017,0);
    gl.glNormal3fv(N001,0);
    gl.glVertex3fv(P001,0);
    gl.glNormal3fv(N018,0);
    gl.glVertex3fv(P018,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N001,0);
    gl.glVertex3fv(P001,0);
    gl.glNormal3fv(N017,0);
    gl.glVertex3fv(P017,0);
    gl.glNormal3fv(N016,0);
    gl.glVertex3fv(P016,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N001,0);
    gl.glVertex3fv(P001,0);
    gl.glNormal3fv(N013,0);
    gl.glVertex3fv(P013,0);
    gl.glNormal3fv(N012,0);
    gl.glVertex3fv(P012,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N001,0);
    gl.glVertex3fv(P001,0);
    gl.glNormal3fv(N016,0);
    gl.glVertex3fv(P016,0);
    gl.glNormal3fv(N015,0);
    gl.glVertex3fv(P015,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N001,0);
    gl.glVertex3fv(P001,0);
    gl.glNormal3fv(N014,0);
    gl.glVertex3fv(P014,0);
    gl.glNormal3fv(N013,0);
    gl.glVertex3fv(P013,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N001,0);
    gl.glVertex3fv(P001,0);
    gl.glNormal3fv(N015,0);
    gl.glVertex3fv(P015,0);
    gl.glNormal3fv(N014,0);
    gl.glVertex3fv(P014,0);
    gl.glEnd();
  }

  void
    Dolphin004()
  {
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N014,0);
    gl.glVertex3fv(P014,0);
    gl.glNormal3fv(N015,0);
    gl.glVertex3fv(P015,0);
    gl.glNormal3fv(N023,0);
    gl.glVertex3fv(P023,0);
    gl.glNormal3fv(N022,0);
    gl.glVertex3fv(P022,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N015,0);
    gl.glVertex3fv(P015,0);
    gl.glNormal3fv(N016,0);
    gl.glVertex3fv(P016,0);
    gl.glNormal3fv(N024,0);
    gl.glVertex3fv(P024,0);
    gl.glNormal3fv(N023,0);
    gl.glVertex3fv(P023,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N016,0);
    gl.glVertex3fv(P016,0);
    gl.glNormal3fv(N017,0);
    gl.glVertex3fv(P017,0);
    gl.glNormal3fv(N025,0);
    gl.glVertex3fv(P025,0);
    gl.glNormal3fv(N024,0);
    gl.glVertex3fv(P024,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N017,0);
    gl.glVertex3fv(P017,0);
    gl.glNormal3fv(N018,0);
    gl.glVertex3fv(P018,0);
    gl.glNormal3fv(N026,0);
    gl.glVertex3fv(P026,0);
    gl.glNormal3fv(N025,0);
    gl.glVertex3fv(P025,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N013,0);
    gl.glVertex3fv(P013,0);
    gl.glNormal3fv(N014,0);
    gl.glVertex3fv(P014,0);
    gl.glNormal3fv(N022,0);
    gl.glVertex3fv(P022,0);
    gl.glNormal3fv(N021,0);
    gl.glVertex3fv(P021,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N012,0);
    gl.glVertex3fv(P012,0);
    gl.glNormal3fv(N013,0);
    gl.glVertex3fv(P013,0);
    gl.glNormal3fv(N021,0);
    gl.glVertex3fv(P021,0);
    gl.glNormal3fv(N020,0);
    gl.glVertex3fv(P020,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N018,0);
    gl.glVertex3fv(P018,0);
    gl.glNormal3fv(N019,0);
    gl.glVertex3fv(P019,0);
    gl.glNormal3fv(N027,0);
    gl.glVertex3fv(P027,0);
    gl.glNormal3fv(N026,0);
    gl.glVertex3fv(P026,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N019,0);
    gl.glVertex3fv(P019,0);
    gl.glNormal3fv(N012,0);
    gl.glVertex3fv(P012,0);
    gl.glNormal3fv(N020,0);
    gl.glVertex3fv(P020,0);
    gl.glNormal3fv(N027,0);
    gl.glVertex3fv(P027,0);
    gl.glEnd();
  }

  void
    Dolphin005()
  {
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N022,0);
    gl.glVertex3fv(P022,0);
    gl.glNormal3fv(N023,0);
    gl.glVertex3fv(P023,0);
    gl.glNormal3fv(N031,0);
    gl.glVertex3fv(P031,0);
    gl.glNormal3fv(N030,0);
    gl.glVertex3fv(P030,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N021,0);
    gl.glVertex3fv(P021,0);
    gl.glNormal3fv(N022,0);
    gl.glVertex3fv(P022,0);
    gl.glNormal3fv(N030,0);
    gl.glVertex3fv(P030,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N021,0);
    gl.glVertex3fv(P021,0);
    gl.glNormal3fv(N030,0);
    gl.glVertex3fv(P030,0);
    gl.glNormal3fv(N029,0);
    gl.glVertex3fv(P029,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N023,0);
    gl.glVertex3fv(P023,0);
    gl.glNormal3fv(N024,0);
    gl.glVertex3fv(P024,0);
    gl.glNormal3fv(N031,0);
    gl.glVertex3fv(P031,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N024,0);
    gl.glVertex3fv(P024,0);
    gl.glNormal3fv(N032,0);
    gl.glVertex3fv(P032,0);
    gl.glNormal3fv(N031,0);
    gl.glVertex3fv(P031,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N024,0);
    gl.glVertex3fv(P024,0);
    gl.glNormal3fv(N025,0);
    gl.glVertex3fv(P025,0);
    gl.glNormal3fv(N032,0);
    gl.glVertex3fv(P032,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N025,0);
    gl.glVertex3fv(P025,0);
    gl.glNormal3fv(N033,0);
    gl.glVertex3fv(P033,0);
    gl.glNormal3fv(N032,0);
    gl.glVertex3fv(P032,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N020,0);
    gl.glVertex3fv(P020,0);
    gl.glNormal3fv(N021,0);
    gl.glVertex3fv(P021,0);
    gl.glNormal3fv(N029,0);
    gl.glVertex3fv(P029,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N020,0);
    gl.glVertex3fv(P020,0);
    gl.glNormal3fv(N029,0);
    gl.glVertex3fv(P029,0);
    gl.glNormal3fv(N028,0);
    gl.glVertex3fv(P028,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N027,0);
    gl.glVertex3fv(P027,0);
    gl.glNormal3fv(N020,0);
    gl.glVertex3fv(P020,0);
    gl.glNormal3fv(N028,0);
    gl.glVertex3fv(P028,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N027,0);
    gl.glVertex3fv(P027,0);
    gl.glNormal3fv(N028,0);
    gl.glVertex3fv(P028,0);
    gl.glNormal3fv(N035,0);
    gl.glVertex3fv(P035,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N025,0);
    gl.glVertex3fv(P025,0);
    gl.glNormal3fv(N026,0);
    gl.glVertex3fv(P026,0);
    gl.glNormal3fv(N033,0);
    gl.glVertex3fv(P033,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N033,0);
    gl.glVertex3fv(P033,0);
    gl.glNormal3fv(N026,0);
    gl.glVertex3fv(P026,0);
    gl.glNormal3fv(N034,0);
    gl.glVertex3fv(P034,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N026,0);
    gl.glVertex3fv(P026,0);
    gl.glNormal3fv(N027,0);
    gl.glVertex3fv(P027,0);
    gl.glNormal3fv(N035,0);
    gl.glVertex3fv(P035,0);
    gl.glNormal3fv(N034,0);
    gl.glVertex3fv(P034,0);
    gl.glEnd();
  }

  void
    Dolphin006()
  {
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N092,0);
    gl.glVertex3fv(P092,0);
    gl.glNormal3fv(N093,0);
    gl.glVertex3fv(P093,0);
    gl.glNormal3fv(N094,0);
    gl.glVertex3fv(P094,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N093,0);
    gl.glVertex3fv(P093,0);
    gl.glNormal3fv(N092,0);
    gl.glVertex3fv(P092,0);
    gl.glNormal3fv(N094,0);
    gl.glVertex3fv(P094,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N092,0);
    gl.glVertex3fv(P092,0);
    gl.glNormal3fv(N091,0);
    gl.glVertex3fv(P091,0);
    gl.glNormal3fv(N095,0);
    gl.glVertex3fv(P095,0);
    gl.glNormal3fv(N094,0);
    gl.glVertex3fv(P094,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N091,0);
    gl.glVertex3fv(P091,0);
    gl.glNormal3fv(N092,0);
    gl.glVertex3fv(P092,0);
    gl.glNormal3fv(N094,0);
    gl.glVertex3fv(P094,0);
    gl.glNormal3fv(N095,0);
    gl.glVertex3fv(P095,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N122,0);
    gl.glVertex3fv(P122,0);
    gl.glNormal3fv(N095,0);
    gl.glVertex3fv(P095,0);
    gl.glNormal3fv(N091,0);
    gl.glVertex3fv(P091,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N122,0);
    gl.glVertex3fv(P122,0);
    gl.glNormal3fv(N091,0);
    gl.glVertex3fv(P091,0);
    gl.glNormal3fv(N095,0);
    gl.glVertex3fv(P095,0);
    gl.glEnd();
  }

  void
    Dolphin007()
  {
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N030,0);
    gl.glVertex3fv(P030,0);
    gl.glNormal3fv(N031,0);
    gl.glVertex3fv(P031,0);
    gl.glNormal3fv(N039,0);
    gl.glVertex3fv(P039,0);
    gl.glNormal3fv(N038,0);
    gl.glVertex3fv(P038,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N029,0);
    gl.glVertex3fv(P029,0);
    gl.glNormal3fv(N030,0);
    gl.glVertex3fv(P030,0);
    gl.glNormal3fv(N038,0);
    gl.glVertex3fv(P038,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N029,0);
    gl.glVertex3fv(P029,0);
    gl.glNormal3fv(N038,0);
    gl.glVertex3fv(P038,0);
    gl.glNormal3fv(N037,0);
    gl.glVertex3fv(P037,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N028,0);
    gl.glVertex3fv(P028,0);
    gl.glNormal3fv(N029,0);
    gl.glVertex3fv(P029,0);
    gl.glNormal3fv(N037,0);
    gl.glVertex3fv(P037,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N028,0);
    gl.glVertex3fv(P028,0);
    gl.glNormal3fv(N037,0);
    gl.glVertex3fv(P037,0);
    gl.glNormal3fv(N036,0);
    gl.glVertex3fv(P036,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N035,0);
    gl.glVertex3fv(P035,0);
    gl.glNormal3fv(N028,0);
    gl.glVertex3fv(P028,0);
    gl.glNormal3fv(N036,0);
    gl.glVertex3fv(P036,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N035,0);
    gl.glVertex3fv(P035,0);
    gl.glNormal3fv(N036,0);
    gl.glVertex3fv(P036,0);
    gl.glNormal3fv(N043,0);
    gl.glVertex3fv(P043,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N034,0);
    gl.glVertex3fv(P034,0);
    gl.glNormal3fv(N035,0);
    gl.glVertex3fv(P035,0);
    gl.glNormal3fv(N043,0);
    gl.glVertex3fv(P043,0);
    gl.glNormal3fv(N042,0);
    gl.glVertex3fv(P042,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N033,0);
    gl.glVertex3fv(P033,0);
    gl.glNormal3fv(N034,0);
    gl.glVertex3fv(P034,0);
    gl.glNormal3fv(N042,0);
    gl.glVertex3fv(P042,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N033,0);
    gl.glVertex3fv(P033,0);
    gl.glNormal3fv(N042,0);
    gl.glVertex3fv(P042,0);
    gl.glNormal3fv(N041,0);
    gl.glVertex3fv(P041,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N031,0);
    gl.glVertex3fv(P031,0);
    gl.glNormal3fv(N032,0);
    gl.glVertex3fv(P032,0);
    gl.glNormal3fv(N039,0);
    gl.glVertex3fv(P039,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N039,0);
    gl.glVertex3fv(P039,0);
    gl.glNormal3fv(N032,0);
    gl.glVertex3fv(P032,0);
    gl.glNormal3fv(N040,0);
    gl.glVertex3fv(P040,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N032,0);
    gl.glVertex3fv(P032,0);
    gl.glNormal3fv(N033,0);
    gl.glVertex3fv(P033,0);
    gl.glNormal3fv(N040,0);
    gl.glVertex3fv(P040,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N040,0);
    gl.glVertex3fv(P040,0);
    gl.glNormal3fv(N033,0);
    gl.glVertex3fv(P033,0);
    gl.glNormal3fv(N041,0);
    gl.glVertex3fv(P041,0);
    gl.glEnd();
  }

  void
    Dolphin008()
  {
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N042,0);
    gl.glVertex3fv(P042,0);
    gl.glNormal3fv(N043,0);
    gl.glVertex3fv(P043,0);
    gl.glNormal3fv(N051,0);
    gl.glVertex3fv(P051,0);
    gl.glNormal3fv(N050,0);
    gl.glVertex3fv(P050,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N043,0);
    gl.glVertex3fv(P043,0);
    gl.glNormal3fv(N036,0);
    gl.glVertex3fv(P036,0);
    gl.glNormal3fv(N051,0);
    gl.glVertex3fv(P051,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N051,0);
    gl.glVertex3fv(P051,0);
    gl.glNormal3fv(N036,0);
    gl.glVertex3fv(P036,0);
    gl.glNormal3fv(N044,0);
    gl.glVertex3fv(P044,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N041,0);
    gl.glVertex3fv(P041,0);
    gl.glNormal3fv(N042,0);
    gl.glVertex3fv(P042,0);
    gl.glNormal3fv(N050,0);
    gl.glVertex3fv(P050,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N041,0);
    gl.glVertex3fv(P041,0);
    gl.glNormal3fv(N050,0);
    gl.glVertex3fv(P050,0);
    gl.glNormal3fv(N049,0);
    gl.glVertex3fv(P049,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N036,0);
    gl.glVertex3fv(P036,0);
    gl.glNormal3fv(N037,0);
    gl.glVertex3fv(P037,0);
    gl.glNormal3fv(N044,0);
    gl.glVertex3fv(P044,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N044,0);
    gl.glVertex3fv(P044,0);
    gl.glNormal3fv(N037,0);
    gl.glVertex3fv(P037,0);
    gl.glNormal3fv(N045,0);
    gl.glVertex3fv(P045,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N040,0);
    gl.glVertex3fv(P040,0);
    gl.glNormal3fv(N041,0);
    gl.glVertex3fv(P041,0);
    gl.glNormal3fv(N049,0);
    gl.glVertex3fv(P049,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N040,0);
    gl.glVertex3fv(P040,0);
    gl.glNormal3fv(N049,0);
    gl.glVertex3fv(P049,0);
    gl.glNormal3fv(N048,0);
    gl.glVertex3fv(P048,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N039,0);
    gl.glVertex3fv(P039,0);
    gl.glNormal3fv(N040,0);
    gl.glVertex3fv(P040,0);
    gl.glNormal3fv(N048,0);
    gl.glVertex3fv(P048,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N039,0);
    gl.glVertex3fv(P039,0);
    gl.glNormal3fv(N048,0);
    gl.glVertex3fv(P048,0);
    gl.glNormal3fv(N047,0);
    gl.glVertex3fv(P047,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N037,0);
    gl.glVertex3fv(P037,0);
    gl.glNormal3fv(N038,0);
    gl.glVertex3fv(P038,0);
    gl.glNormal3fv(N045,0);
    gl.glVertex3fv(P045,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N038,0);
    gl.glVertex3fv(P038,0);
    gl.glNormal3fv(N046,0);
    gl.glVertex3fv(P046,0);
    gl.glNormal3fv(N045,0);
    gl.glVertex3fv(P045,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N038,0);
    gl.glVertex3fv(P038,0);
    gl.glNormal3fv(N039,0);
    gl.glVertex3fv(P039,0);
    gl.glNormal3fv(N047,0);
    gl.glVertex3fv(P047,0);
    gl.glNormal3fv(N046,0);
    gl.glVertex3fv(P046,0);
    gl.glEnd();
  }

  void
    Dolphin009()
  {
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N050,0);
    gl.glVertex3fv(P050,0);
    gl.glNormal3fv(N051,0);
    gl.glVertex3fv(P051,0);
    gl.glNormal3fv(N059,0);
    gl.glVertex3fv(P059,0);
    gl.glNormal3fv(N058,0);
    gl.glVertex3fv(P058,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N051,0);
    gl.glVertex3fv(P051,0);
    gl.glNormal3fv(N044,0);
    gl.glVertex3fv(P044,0);
    gl.glNormal3fv(N059,0);
    gl.glVertex3fv(P059,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N059,0);
    gl.glVertex3fv(P059,0);
    gl.glNormal3fv(N044,0);
    gl.glVertex3fv(P044,0);
    gl.glNormal3fv(N052,0);
    gl.glVertex3fv(P052,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N044,0);
    gl.glVertex3fv(P044,0);
    gl.glNormal3fv(N045,0);
    gl.glVertex3fv(P045,0);
    gl.glNormal3fv(N053,0);
    gl.glVertex3fv(P053,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N044,0);
    gl.glVertex3fv(P044,0);
    gl.glNormal3fv(N053,0);
    gl.glVertex3fv(P053,0);
    gl.glNormal3fv(N052,0);
    gl.glVertex3fv(P052,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N049,0);
    gl.glVertex3fv(P049,0);
    gl.glNormal3fv(N050,0);
    gl.glVertex3fv(P050,0);
    gl.glNormal3fv(N058,0);
    gl.glVertex3fv(P058,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N049,0);
    gl.glVertex3fv(P049,0);
    gl.glNormal3fv(N058,0);
    gl.glVertex3fv(P058,0);
    gl.glNormal3fv(N057,0);
    gl.glVertex3fv(P057,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N048,0);
    gl.glVertex3fv(P048,0);
    gl.glNormal3fv(N049,0);
    gl.glVertex3fv(P049,0);
    gl.glNormal3fv(N057,0);
    gl.glVertex3fv(P057,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N048,0);
    gl.glVertex3fv(P048,0);
    gl.glNormal3fv(N057,0);
    gl.glVertex3fv(P057,0);
    gl.glNormal3fv(N056,0);
    gl.glVertex3fv(P056,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N047,0);
    gl.glVertex3fv(P047,0);
    gl.glNormal3fv(N048,0);
    gl.glVertex3fv(P048,0);
    gl.glNormal3fv(N056,0);
    gl.glVertex3fv(P056,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N047,0);
    gl.glVertex3fv(P047,0);
    gl.glNormal3fv(N056,0);
    gl.glVertex3fv(P056,0);
    gl.glNormal3fv(N055,0);
    gl.glVertex3fv(P055,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N045,0);
    gl.glVertex3fv(P045,0);
    gl.glNormal3fv(N046,0);
    gl.glVertex3fv(P046,0);
    gl.glNormal3fv(N053,0);
    gl.glVertex3fv(P053,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N046,0);
    gl.glVertex3fv(P046,0);
    gl.glNormal3fv(N054,0);
    gl.glVertex3fv(P054,0);
    gl.glNormal3fv(N053,0);
    gl.glVertex3fv(P053,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N046,0);
    gl.glVertex3fv(P046,0);
    gl.glNormal3fv(N047,0);
    gl.glVertex3fv(P047,0);
    gl.glNormal3fv(N055,0);
    gl.glVertex3fv(P055,0);
    gl.glNormal3fv(N054,0);
    gl.glVertex3fv(P054,0);
    gl.glEnd();
  }

  void
    Dolphin010()
  {
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N080,0);
    gl.glVertex3fv(P080,0);
    gl.glNormal3fv(N081,0);
    gl.glVertex3fv(P081,0);
    gl.glNormal3fv(N085,0);
    gl.glVertex3fv(P085,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N081,0);
    gl.glVertex3fv(P081,0);
    gl.glNormal3fv(N083,0);
    gl.glVertex3fv(P083,0);
    gl.glNormal3fv(N085,0);
    gl.glVertex3fv(P085,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N085,0);
    gl.glVertex3fv(P085,0);
    gl.glNormal3fv(N083,0);
    gl.glVertex3fv(P083,0);
    gl.glNormal3fv(N077,0);
    gl.glVertex3fv(P077,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N083,0);
    gl.glVertex3fv(P083,0);
    gl.glNormal3fv(N087,0);
    gl.glVertex3fv(P087,0);
    gl.glNormal3fv(N077,0);
    gl.glVertex3fv(P077,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N077,0);
    gl.glVertex3fv(P077,0);
    gl.glNormal3fv(N087,0);
    gl.glVertex3fv(P087,0);
    gl.glNormal3fv(N090,0);
    gl.glVertex3fv(P090,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N081,0);
    gl.glVertex3fv(P081,0);
    gl.glNormal3fv(N080,0);
    gl.glVertex3fv(P080,0);
    gl.glNormal3fv(N085,0);
    gl.glVertex3fv(P085,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N083,0);
    gl.glVertex3fv(P083,0);
    gl.glNormal3fv(N081,0);
    gl.glVertex3fv(P081,0);
    gl.glNormal3fv(N085,0);
    gl.glVertex3fv(P085,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N083,0);
    gl.glVertex3fv(P083,0);
    gl.glNormal3fv(N085,0);
    gl.glVertex3fv(P085,0);
    gl.glNormal3fv(N077,0);
    gl.glVertex3fv(P077,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N087,0);
    gl.glVertex3fv(P087,0);
    gl.glNormal3fv(N083,0);
    gl.glVertex3fv(P083,0);
    gl.glNormal3fv(N077,0);
    gl.glVertex3fv(P077,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N087,0);
    gl.glVertex3fv(P087,0);
    gl.glNormal3fv(N077,0);
    gl.glVertex3fv(P077,0);
    gl.glNormal3fv(N090,0);
    gl.glVertex3fv(P090,0);
    gl.glEnd();
  }

  void
    Dolphin011()
  {
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N082,0);
    gl.glVertex3fv(P082,0);
    gl.glNormal3fv(N084,0);
    gl.glVertex3fv(P084,0);
    gl.glNormal3fv(N079,0);
    gl.glVertex3fv(P079,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N084,0);
    gl.glVertex3fv(P084,0);
    gl.glNormal3fv(N086,0);
    gl.glVertex3fv(P086,0);
    gl.glNormal3fv(N079,0);
    gl.glVertex3fv(P079,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N079,0);
    gl.glVertex3fv(P079,0);
    gl.glNormal3fv(N086,0);
    gl.glVertex3fv(P086,0);
    gl.glNormal3fv(N078,0);
    gl.glVertex3fv(P078,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N086,0);
    gl.glVertex3fv(P086,0);
    gl.glNormal3fv(N088,0);
    gl.glVertex3fv(P088,0);
    gl.glNormal3fv(N078,0);
    gl.glVertex3fv(P078,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N078,0);
    gl.glVertex3fv(P078,0);
    gl.glNormal3fv(N088,0);
    gl.glVertex3fv(P088,0);
    gl.glNormal3fv(N089,0);
    gl.glVertex3fv(P089,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N088,0);
    gl.glVertex3fv(P088,0);
    gl.glNormal3fv(N086,0);
    gl.glVertex3fv(P086,0);
    gl.glNormal3fv(N089,0);
    gl.glVertex3fv(P089,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N089,0);
    gl.glVertex3fv(P089,0);
    gl.glNormal3fv(N086,0);
    gl.glVertex3fv(P086,0);
    gl.glNormal3fv(N078,0);
    gl.glVertex3fv(P078,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N086,0);
    gl.glVertex3fv(P086,0);
    gl.glNormal3fv(N084,0);
    gl.glVertex3fv(P084,0);
    gl.glNormal3fv(N078,0);
    gl.glVertex3fv(P078,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N078,0);
    gl.glVertex3fv(P078,0);
    gl.glNormal3fv(N084,0);
    gl.glVertex3fv(P084,0);
    gl.glNormal3fv(N079,0);
    gl.glVertex3fv(P079,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N084,0);
    gl.glVertex3fv(P084,0);
    gl.glNormal3fv(N082,0);
    gl.glVertex3fv(P082,0);
    gl.glNormal3fv(N079,0);
    gl.glVertex3fv(P079,0);
    gl.glEnd();
  }

  void
    Dolphin012()
  {
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N058,0);
    gl.glVertex3fv(P058,0);
    gl.glNormal3fv(N059,0);
    gl.glVertex3fv(P059,0);
    gl.glNormal3fv(N067,0);
    gl.glVertex3fv(P067,0);
    gl.glNormal3fv(N066,0);
    gl.glVertex3fv(P066,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N059,0);
    gl.glVertex3fv(P059,0);
    gl.glNormal3fv(N052,0);
    gl.glVertex3fv(P052,0);
    gl.glNormal3fv(N060,0);
    gl.glVertex3fv(P060,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N059,0);
    gl.glVertex3fv(P059,0);
    gl.glNormal3fv(N060,0);
    gl.glVertex3fv(P060,0);
    gl.glNormal3fv(N067,0);
    gl.glVertex3fv(P067,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N058,0);
    gl.glVertex3fv(P058,0);
    gl.glNormal3fv(N066,0);
    gl.glVertex3fv(P066,0);
    gl.glNormal3fv(N065,0);
    gl.glVertex3fv(P065,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N058,0);
    gl.glVertex3fv(P058,0);
    gl.glNormal3fv(N065,0);
    gl.glVertex3fv(P065,0);
    gl.glNormal3fv(N057,0);
    gl.glVertex3fv(P057,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N056,0);
    gl.glVertex3fv(P056,0);
    gl.glNormal3fv(N057,0);
    gl.glVertex3fv(P057,0);
    gl.glNormal3fv(N065,0);
    gl.glVertex3fv(P065,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N056,0);
    gl.glVertex3fv(P056,0);
    gl.glNormal3fv(N065,0);
    gl.glVertex3fv(P065,0);
    gl.glNormal3fv(N006,0);
    gl.glVertex3fv(P006,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N056,0);
    gl.glVertex3fv(P056,0);
    gl.glNormal3fv(N006,0);
    gl.glVertex3fv(P006,0);
    gl.glNormal3fv(N063,0);
    gl.glVertex3fv(P063,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N056,0);
    gl.glVertex3fv(P056,0);
    gl.glNormal3fv(N063,0);
    gl.glVertex3fv(P063,0);
    gl.glNormal3fv(N055,0);
    gl.glVertex3fv(P055,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N054,0);
    gl.glVertex3fv(P054,0);
    gl.glNormal3fv(N062,0);
    gl.glVertex3fv(P062,0);
    gl.glNormal3fv(N005,0);
    gl.glVertex3fv(P005,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N054,0);
    gl.glVertex3fv(P054,0);
    gl.glNormal3fv(N005,0);
    gl.glVertex3fv(P005,0);
    gl.glNormal3fv(N053,0);
    gl.glVertex3fv(P053,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N052,0);
    gl.glVertex3fv(P052,0);
    gl.glNormal3fv(N053,0);
    gl.glVertex3fv(P053,0);
    gl.glNormal3fv(N005,0);
    gl.glVertex3fv(P005,0);
    gl.glNormal3fv(N060,0);
    gl.glVertex3fv(P060,0);
    gl.glEnd();
  }

  void
    Dolphin013()
  {
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N116,0);
    gl.glVertex3fv(P116,0);
    gl.glNormal3fv(N117,0);
    gl.glVertex3fv(P117,0);
    gl.glNormal3fv(N112,0);
    gl.glVertex3fv(P112,0);
    gl.glNormal3fv(N113,0);
    gl.glVertex3fv(P113,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N114,0);
    gl.glVertex3fv(P114,0);
    gl.glNormal3fv(N113,0);
    gl.glVertex3fv(P113,0);
    gl.glNormal3fv(N112,0);
    gl.glVertex3fv(P112,0);
    gl.glNormal3fv(N115,0);
    gl.glVertex3fv(P115,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N114,0);
    gl.glVertex3fv(P114,0);
    gl.glNormal3fv(N116,0);
    gl.glVertex3fv(P116,0);
    gl.glNormal3fv(N113,0);
    gl.glVertex3fv(P113,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N114,0);
    gl.glVertex3fv(P114,0);
    gl.glNormal3fv(N007,0);
    gl.glVertex3fv(P007,0);
    gl.glNormal3fv(N116,0);
    gl.glVertex3fv(P116,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N007,0);
    gl.glVertex3fv(P007,0);
    gl.glNormal3fv(N002,0);
    gl.glVertex3fv(P002,0);
    gl.glNormal3fv(N116,0);
    gl.glVertex3fv(P116,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glVertex3fv(P002,0);
    gl.glVertex3fv(P007,0);
    gl.glVertex3fv(P008,0);
    gl.glVertex3fv(P099,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glVertex3fv(P007,0);
    gl.glVertex3fv(P114,0);
    gl.glVertex3fv(P115,0);
    gl.glVertex3fv(P008,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N117,0);
    gl.glVertex3fv(P117,0);
    gl.glNormal3fv(N099,0);
    gl.glVertex3fv(P099,0);
    gl.glNormal3fv(N008,0);
    gl.glVertex3fv(P008,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N117,0);
    gl.glVertex3fv(P117,0);
    gl.glNormal3fv(N008,0);
    gl.glVertex3fv(P008,0);
    gl.glNormal3fv(N112,0);
    gl.glVertex3fv(P112,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N112,0);
    gl.glVertex3fv(P112,0);
    gl.glNormal3fv(N008,0);
    gl.glVertex3fv(P008,0);
    gl.glNormal3fv(N115,0);
    gl.glVertex3fv(P115,0);
    gl.glEnd();
  }

  void
    Dolphin014(){
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N111,0);
    gl.glVertex3fv(P111,0);
    gl.glNormal3fv(N110,0);
    gl.glVertex3fv(P110,0);
    gl.glNormal3fv(N102,0);
    gl.glVertex3fv(P102,0);
    gl.glNormal3fv(N121,0);
    gl.glVertex3fv(P121,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N111,0);
    gl.glVertex3fv(P111,0);
    gl.glNormal3fv(N097,0);
    gl.glVertex3fv(P097,0);
    gl.glNormal3fv(N110,0);
    gl.glVertex3fv(P110,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N097,0);
    gl.glVertex3fv(P097,0);
    gl.glNormal3fv(N119,0);
    gl.glVertex3fv(P119,0);
    gl.glNormal3fv(N110,0);
    gl.glVertex3fv(P110,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N097,0);
    gl.glVertex3fv(P097,0);
    gl.glNormal3fv(N099,0);
    gl.glVertex3fv(P099,0);
    gl.glNormal3fv(N119,0);
    gl.glVertex3fv(P119,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N099,0);
    gl.glVertex3fv(P099,0);
    gl.glNormal3fv(N065,0);
    gl.glVertex3fv(P065,0);
    gl.glNormal3fv(N119,0);
    gl.glVertex3fv(P119,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N065,0);
    gl.glVertex3fv(P065,0);
    gl.glNormal3fv(N066,0);
    gl.glVertex3fv(P066,0);
    gl.glNormal3fv(N119,0);
    gl.glVertex3fv(P119,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glVertex3fv(P098,0);
    gl.glVertex3fv(P097,0);
    gl.glVertex3fv(P111,0);
    gl.glVertex3fv(P121,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glVertex3fv(P002,0);
    gl.glVertex3fv(P099,0);
    gl.glVertex3fv(P097,0);
    gl.glVertex3fv(P098,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N110,0);
    gl.glVertex3fv(P110,0);
    gl.glNormal3fv(N119,0);
    gl.glVertex3fv(P119,0);
    gl.glNormal3fv(N118,0);
    gl.glVertex3fv(P118,0);
    gl.glNormal3fv(N102,0);
    gl.glVertex3fv(P102,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N119,0);
    gl.glVertex3fv(P119,0);
    gl.glNormal3fv(N066,0);
    gl.glVertex3fv(P066,0);
    gl.glNormal3fv(N067,0);
    gl.glVertex3fv(P067,0);
    gl.glNormal3fv(N118,0);
    gl.glVertex3fv(P118,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N067,0);
    gl.glVertex3fv(P067,0);
    gl.glNormal3fv(N060,0);
    gl.glVertex3fv(P060,0);
    gl.glNormal3fv(N002,0);
    gl.glVertex3fv(P002,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N067,0);
    gl.glVertex3fv(P067,0);
    gl.glNormal3fv(N002,0);
    gl.glVertex3fv(P002,0);
    gl.glNormal3fv(N118,0);
    gl.glVertex3fv(P118,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N118,0);
    gl.glVertex3fv(P118,0);
    gl.glNormal3fv(N002,0);
    gl.glVertex3fv(P002,0);
    gl.glNormal3fv(N098,0);
    gl.glVertex3fv(P098,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N118,0);
    gl.glVertex3fv(P118,0);
    gl.glNormal3fv(N098,0);
    gl.glVertex3fv(P098,0);
    gl.glNormal3fv(N102,0);
    gl.glVertex3fv(P102,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N102,0);
    gl.glVertex3fv(P102,0);
    gl.glNormal3fv(N098,0);
    gl.glVertex3fv(P098,0);
    gl.glNormal3fv(N121,0);
    gl.glVertex3fv(P121,0);
    gl.glEnd();
  }

  void
    Dolphin015()
  {
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N055,0);
    gl.glVertex3fv(P055,0);
    gl.glNormal3fv(N003,0);
    gl.glVertex3fv(P003,0);
    gl.glNormal3fv(N054,0);
    gl.glVertex3fv(P054,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N003,0);
    gl.glVertex3fv(P003,0);
    gl.glNormal3fv(N055,0);
    gl.glVertex3fv(P055,0);
    gl.glNormal3fv(N063,0);
    gl.glVertex3fv(P063,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N003,0);
    gl.glVertex3fv(P003,0);
    gl.glNormal3fv(N063,0);
    gl.glVertex3fv(P063,0);
    gl.glNormal3fv(N100,0);
    gl.glVertex3fv(P100,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N003,0);
    gl.glVertex3fv(P003,0);
    gl.glNormal3fv(N100,0);
    gl.glVertex3fv(P100,0);
    gl.glNormal3fv(N054,0);
    gl.glVertex3fv(P054,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N054,0);
    gl.glVertex3fv(P054,0);
    gl.glNormal3fv(N100,0);
    gl.glVertex3fv(P100,0);
    gl.glNormal3fv(N062,0);
    gl.glVertex3fv(P062,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N100,0);
    gl.glVertex3fv(P100,0);
    gl.glNormal3fv(N064,0);
    gl.glVertex3fv(P064,0);
    gl.glNormal3fv(N120,0);
    gl.glVertex3fv(P120,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N100,0);
    gl.glVertex3fv(P100,0);
    gl.glNormal3fv(N063,0);
    gl.glVertex3fv(P063,0);
    gl.glNormal3fv(N064,0);
    gl.glVertex3fv(P064,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N063,0);
    gl.glVertex3fv(P063,0);
    gl.glNormal3fv(N006,0);
    gl.glVertex3fv(P006,0);
    gl.glNormal3fv(N064,0);
    gl.glVertex3fv(P064,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N064,0);
    gl.glVertex3fv(P064,0);
    gl.glNormal3fv(N006,0);
    gl.glVertex3fv(P006,0);
    gl.glNormal3fv(N099,0);
    gl.glVertex3fv(P099,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N064,0);
    gl.glVertex3fv(P064,0);
    gl.glNormal3fv(N099,0);
    gl.glVertex3fv(P099,0);
    gl.glNormal3fv(N117,0);
    gl.glVertex3fv(P117,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N120,0);
    gl.glVertex3fv(P120,0);
    gl.glNormal3fv(N064,0);
    gl.glVertex3fv(P064,0);
    gl.glNormal3fv(N117,0);
    gl.glVertex3fv(P117,0);
    gl.glNormal3fv(N116,0);
    gl.glVertex3fv(P116,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N006,0);
    gl.glVertex3fv(P006,0);
    gl.glNormal3fv(N065,0);
    gl.glVertex3fv(P065,0);
    gl.glNormal3fv(N099,0);
    gl.glVertex3fv(P099,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N062,0);
    gl.glVertex3fv(P062,0);
    gl.glNormal3fv(N100,0);
    gl.glVertex3fv(P100,0);
    gl.glNormal3fv(N120,0);
    gl.glVertex3fv(P120,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N005,0);
    gl.glVertex3fv(P005,0);
    gl.glNormal3fv(N062,0);
    gl.glVertex3fv(P062,0);
    gl.glNormal3fv(N120,0);
    gl.glVertex3fv(P120,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N005,0);
    gl.glVertex3fv(P005,0);
    gl.glNormal3fv(N120,0);
    gl.glVertex3fv(P120,0);
    gl.glNormal3fv(N002,0);
    gl.glVertex3fv(P002,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N002,0);
    gl.glVertex3fv(P002,0);
    gl.glNormal3fv(N120,0);
    gl.glVertex3fv(P120,0);
    gl.glNormal3fv(N116,0);
    gl.glVertex3fv(P116,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glNormal3fv(N060,0);
    gl.glVertex3fv(P060,0);
    gl.glNormal3fv(N005,0);
    gl.glVertex3fv(P005,0);
    gl.glNormal3fv(N002,0);
    gl.glVertex3fv(P002,0);
    gl.glEnd();
  }

  void Dolphin016(){
    gl.glDisable(GL.GL_DEPTH_TEST);
    gl.glBegin(GL2.GL_POLYGON);
    gl.glVertex3fv(P123,0);
    gl.glVertex3fv(P124,0);
    gl.glVertex3fv(P125,0);
    gl.glVertex3fv(P126,0);
    gl.glVertex3fv(P127,0);
    gl.glVertex3fv(P128,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glVertex3fv(P129,0);
    gl.glVertex3fv(P130,0);
    gl.glVertex3fv(P131,0);
    gl.glVertex3fv(P132,0);
    gl.glVertex3fv(P133,0);
    gl.glVertex3fv(P134,0);
    gl.glEnd();
    gl.glBegin(GL2.GL_POLYGON);
    gl.glVertex3fv(P103,0);
    gl.glVertex3fv(P105,0);
    gl.glVertex3fv(P108,0);
    gl.glEnd();
    gl.glEnable(GL.GL_DEPTH_TEST);
  }

  static float[] N001 = {-0.005937f,-0.101998f,-0.994767f};
  static float[] N002 = {0.936780f,-0.200803f,0.286569f};
  static float[] N003 = {-0.233062f,0.972058f,0.028007f};
  static float[] N005 = {0.898117f,0.360171f,0.252315f};
  static float[] N006 = {-0.915437f,0.348456f,0.201378f};
  static float[] N007 = {0.602263f,-0.777527f,0.180920f};
  static float[] N008 = {-0.906912f,-0.412015f,0.088061f};
  static float[] N012 = {0.884408f,-0.429417f,-0.182821f};
  static float[] N013 = {0.921121f,0.311084f,-0.234016f};
  static float[] N014 = {0.382635f,0.877882f,-0.287948f};
  static float[] N015 = {-0.380046f,0.888166f,-0.258316f};
  static float[] N016 = {-0.891515f,0.392238f,-0.226607f};
  static float[] N017 = {-0.901419f,-0.382002f,-0.203763f};
  static float[] N018 = {-0.367225f,-0.911091f,-0.187243f};
  static float[] N019 = {0.339539f,-0.924846f,-0.171388f};
  static float[] N020 = {0.914706f,-0.378617f,-0.141290f};
  static float[] N021 = {0.950662f,0.262713f,-0.164994f};
  static float[] N022 = {0.546359f,0.801460f,-0.243218f};
  static float[] N023 = {-0.315796f,0.917068f,-0.243431f};
  static float[] N024 = {-0.825687f,0.532277f,-0.186875f};
  static float[] N025 = {-0.974763f,-0.155232f,-0.160435f};
  static float[] N026 = {-0.560596f,-0.816658f,-0.137119f};
  static float[] N027 = {0.380210f,-0.910817f,-0.160786f};
  static float[] N028 = {0.923772f,-0.358322f,-0.135093f};
  static float[] N029 = {0.951202f,0.275053f,-0.139859f};
  static float[] N030 = {0.686099f,0.702548f,-0.188932f};
  static float[] N031 = {-0.521865f,0.826719f,-0.210220f};
  static float[] N032 = {-0.923820f,0.346739f,-0.162258f};
  static float[] N033 = {-0.902095f,-0.409995f,-0.134646f};
  static float[] N034 = {-0.509115f,-0.848498f,-0.144404f};
  static float[] N035 = {0.456469f,-0.880293f,-0.129305f};
  static float[] N036 = {0.873401f,-0.475489f,-0.105266f};
  static float[] N037 = {0.970825f,0.179861f,-0.158584f};
  static float[] N038 = {0.675609f,0.714187f,-0.183004f};
  static float[] N039 = {-0.523574f,0.830212f,-0.191360f};
  static float[] N040 = {-0.958895f,0.230808f,-0.165071f};
  static float[] N041 = {-0.918285f,-0.376803f,-0.121542f};
  static float[] N042 = {-0.622467f,-0.774167f,-0.114888f};
  static float[] N043 = {0.404497f,-0.908807f,-0.102231f};
  static float[] N044 = {0.930538f,-0.365155f,-0.027588f};
  static float[] N045 = {0.921920f,0.374157f,-0.100345f};
  static float[] N046 = {0.507346f,0.860739f,0.041562f};
  static float[] N047 = {-0.394646f,0.918815f,-0.005730f};
  static float[] N048 = {-0.925411f,0.373024f,-0.066837f};
  static float[] N049 = {-0.945337f,-0.322309f,-0.049551f};
  static float[] N050 = {-0.660437f,-0.750557f,-0.022072f};
  static float[] N051 = {0.488835f,-0.871950f,-0.027261f};
  static float[] N052 = {0.902599f,-0.421397f,0.087969f};
  static float[] N053 = {0.938636f,0.322606f,0.122020f};
  static float[] N054 = {0.484605f,0.871078f,0.079878f};
  static float[] N055 = {-0.353607f,0.931559f,0.084619f};
  static float[] N056 = {-0.867759f,0.478564f,0.134054f};
  static float[] N057 = {-0.951583f,-0.296030f,0.082794f};
  static float[] N058 = {-0.672355f,-0.730209f,0.121384f};
  static float[] N059 = {0.528336f,-0.842452f,0.105525f};
  static float[] N060 = {0.786913f,-0.564760f,0.248627f};
  static float[] N062 = {0.622098f,0.765230f,0.165584f};
  static float[] N063 = {-0.631711f,0.767816f,0.106773f};
  static float[] N064 = {-0.687886f,0.606351f,0.398938f};
  static float[] N065 = {-0.946327f,-0.281623f,0.158598f};
  static float[] N066 = {-0.509549f,-0.860437f,0.002776f};
  static float[] N067 = {0.462594f,-0.876692f,0.131977f};
  static float[] N071 = {0.000000f,1.000000f,0.000000f};
  static float[] N077 = {-0.880770f,0.461448f,0.106351f};
  static float[] N078 = {-0.880770f,0.461448f,0.106351f};
  static float[] N079 = {-0.880770f,0.461448f,0.106351f};
  static float[] N080 = {-0.880770f,0.461448f,0.106351f};
  static float[] N081 = {-0.571197f,0.816173f,0.087152f};
  static float[] N082 = {-0.880770f,0.461448f,0.106351f};
  static float[] N083 = {-0.571197f,0.816173f,0.087152f};
  static float[] N084 = {-0.571197f,0.816173f,0.087152f};
  static float[] N085 = {-0.880770f,0.461448f,0.106351f};
  static float[] N086 = {-0.571197f,0.816173f,0.087152f};
  static float[] N087 = {-0.880770f,0.461448f,0.106351f};
  static float[] N088 = {-0.880770f,0.461448f,0.106351f};
  static float[] N089 = {-0.880770f,0.461448f,0.106351f};
  static float[] N090 = {-0.880770f,0.461448f,0.106351f};
  static float[] N091 = {0.000000f,1.000000f,0.000000f};
  static float[] N092 = {0.000000f,1.000000f,0.000000f};
  static float[] N093 = {0.000000f,1.000000f,0.000000f};
  static float[] N094 = {1.000000f,0.000000f,0.000000f};
  static float[] N095 = {-1.000000f,0.000000f,0.000000f};
  static float[] N097 = {-0.697296f,0.702881f,0.140491f};
  static float[] N098 = {0.918864f,0.340821f,0.198819f};
  static float[] N099 = {-0.932737f,0.201195f,0.299202f};
  static float[] N100 = {0.029517f,0.981679f,0.188244f};
  static float[] N102 = {0.813521f,-0.204936f,0.544229f};
  static float[] N110 = {-0.781480f,-0.384779f,0.491155f};
  static float[] N111 = {-0.722243f,0.384927f,0.574627f};
  static float[] N112 = {-0.752278f,0.502679f,0.425901f};
  static float[] N113 = {0.547257f,0.367910f,0.751766f};
  static float[] N114 = {0.725949f,-0.232568f,0.647233f};
  static float[] N115 = {-0.747182f,-0.660786f,0.071280f};
  static float[] N116 = {0.931519f,0.200748f,0.303270f};
  static float[] N117 = {-0.828928f,0.313757f,0.463071f};
  static float[] N118 = {0.902554f,-0.370967f,0.218587f};
  static float[] N119 = {-0.879257f,-0.441851f,0.177973f};
  static float[] N120 = {0.642327f,0.611901f,0.461512f};
  static float[] N121 = {0.964817f,-0.202322f,0.167910f};
  static float[] N122 = {0.000000f,1.000000f,0.000000f};
  static float[] P001 = {5.68f, -300.95f, 1324.70f};
  static float[] P002 = {338.69f, -219.63f, 9677.03f};
  static float[] P003 = {12.18f, 474.59f, 9138.14f};
  static float[] P005 = {487.51f, 198.05f, 9350.78f};
  static float[] P006 = {-457.61f, 68.74f, 9427.85f};
  static float[] P007 = {156.52f, -266.72f, 10311.68f};
  static float[] P008 = {-185.56f, -266.51f, 10310.47f};
  static float[] P009 = {124.39f, -261.46f, 1942.34f};
  static float[] P010 = {-130.05f, -261.46f, 1946.03f};
  static float[] P011 = {141.07f, -320.11f, 1239.38f};
  static float[] P012 = {156.48f, -360.12f, 2073.41f};
  static float[] P013 = {162.00f, -175.88f, 2064.44f};
  static float[] P014 = {88.16f, -87.72f, 2064.02f};
  static float[] P015 = {-65.21f, -96.13f, 2064.02f};
  static float[] P016 = {-156.48f, -180.96f, 2064.44f};
  static float[] P017 = {-162.00f, -368.93f, 2082.39f};
  static float[] P018 = {-88.16f, -439.22f, 2082.39f};
  static float[] P019 = {65.21f, -440.32f, 2083.39f};
  static float[] P020 = {246.87f, -356.02f, 2576.95f};
  static float[] P021 = {253.17f, -111.15f, 2567.15f};
  static float[] P022 = {132.34f, 51.41f, 2559.84f};
  static float[] P023 = {-97.88f, 40.44f, 2567.15f};
  static float[] P024 = {-222.97f, -117.49f, 2567.15f};
  static float[] P025 = {-252.22f, -371.53f, 2569.92f};
  static float[] P026 = {-108.44f, -518.19f, 2586.75f};
  static float[] P027 = {97.88f, -524.79f, 2586.75f};
  static float[] P028 = {370.03f, -421.19f, 3419.70f};
  static float[] P029 = {351.15f, -16.98f, 3423.17f};
  static float[] P030 = {200.66f, 248.46f, 3430.37f};
  static float[] P031 = {-148.42f, 235.02f, 3417.91f};
  static float[] P032 = {-360.21f, -30.27f, 3416.84f};
  static float[] P033 = {-357.90f, -414.89f, 3407.04f};
  static float[] P034 = {-148.88f, -631.35f, 3409.90f};
  static float[] P035 = {156.38f, -632.59f, 3419.70f};
  static float[] P036 = {462.61f, -469.21f, 4431.51f};
  static float[] P037 = {466.60f, 102.25f, 4434.98f};
  static float[] P038 = {243.05f, 474.34f, 4562.02f};
  static float[] P039 = {-191.23f, 474.40f, 4554.42f};
  static float[] P040 = {-476.12f, 111.05f, 4451.11f};
  static float[] P041 = {-473.36f, -470.74f, 4444.78f};
  static float[] P042 = {-266.95f, -748.41f, 4447.78f};
  static float[] P043 = {211.14f, -749.91f, 4429.73f};
  static float[] P044 = {680.57f, -370.27f, 5943.46f};
  static float[] P045 = {834.01f, 363.09f, 6360.63f};
  static float[] P046 = {371.29f, 804.51f, 6486.26f};
  static float[] P047 = {-291.43f, 797.22f, 6494.28f};
  static float[] P048 = {-784.13f, 370.75f, 6378.01f};
  static float[] P049 = {-743.29f, -325.82f, 5943.46f};
  static float[] P050 = {-383.24f, -804.77f, 5943.46f};
  static float[] P051 = {283.47f, -846.09f, 5943.46f};
  static float[] iP001 = {5.68f, -300.95f, 1324.70f};
  static float[] iP009 = {124.39f, -261.46f, 1942.34f};
  static float[] iP010 = {-130.05f, -261.46f, 1946.03f};
  static float[] iP011 = {141.07f, -320.11f, 1239.38f};
  static float[] iP012 = {156.48f, -360.12f, 2073.41f};
  static float[] iP013 = {162.00f, -175.88f, 2064.44f};
  static float[] iP014 = {88.16f, -87.72f, 2064.02f};
  static float[] iP015 = {-65.21f, -96.13f, 2064.02f};
  static float[] iP016 = {-156.48f, -180.96f, 2064.44f};
  static float[] iP017 = {-162.00f, -368.93f, 2082.39f};
  static float[] iP018 = {-88.16f, -439.22f, 2082.39f};
  static float[] iP019 = {65.21f, -440.32f, 2083.39f};
  static float[] iP020 = {246.87f, -356.02f, 2576.95f};
  static float[] iP021 = {253.17f, -111.15f, 2567.15f};
  static float[] iP022 = {132.34f, 51.41f, 2559.84f};
  static float[] iP023 = {-97.88f, 40.44f, 2567.15f};
  static float[] iP024 = {-222.97f, -117.49f, 2567.15f};
  static float[] iP025 = {-252.22f, -371.53f, 2569.92f};
  static float[] iP026 = {-108.44f, -518.19f, 2586.75f};
  static float[] iP027 = {97.88f, -524.79f, 2586.75f};
  static float[] iP028 = {370.03f, -421.19f, 3419.70f};
  static float[] iP029 = {351.15f, -16.98f, 3423.17f};
  static float[] iP030 = {200.66f, 248.46f, 3430.37f};
  static float[] iP031 = {-148.42f, 235.02f, 3417.91f};
  static float[] iP032 = {-360.21f, -30.27f, 3416.84f};
  static float[] iP033 = {-357.90f, -414.89f, 3407.04f};
  static float[] iP034 = {-148.88f, -631.35f, 3409.90f};
  static float[] iP035 = {156.38f, -632.59f, 3419.70f};
  static float[] iP036 = {462.61f, -469.21f, 4431.51f};
  static float[] iP037 = {466.60f, 102.25f, 4434.98f};
  static float[] iP038 = {243.05f, 474.34f, 4562.02f};
  static float[] iP039 = {-191.23f, 474.40f, 4554.42f};
  static float[] iP040 = {-476.12f, 111.05f, 4451.11f};
  static float[] iP041 = {-473.36f, -470.74f, 4444.78f};
  static float[] iP042 = {-266.95f, -748.41f, 4447.78f};
  static float[] iP043 = {211.14f, -749.91f, 4429.73f};
  static float[] iP044 = {680.57f, -370.27f, 5943.46f};
  static float[] iP045 = {834.01f, 363.09f, 6360.63f};
  static float[] iP046 = {371.29f, 804.51f, 6486.26f};
  static float[] iP047 = {-291.43f, 797.22f, 6494.28f};
  static float[] iP048 = {-784.13f, 370.75f, 6378.01f};
  static float[] iP049 = {-743.29f, -325.82f, 5943.46f};
  static float[] iP050 = {-383.24f, -804.77f, 5943.46f};
  static float[] iP051 = {283.47f, -846.09f, 5943.46f};
  static float[] P052 = {599.09f, -300.15f, 7894.03f};
  static float[] P053 = {735.48f, 306.26f, 7911.92f};
  static float[] P054 = {246.22f, 558.53f, 8460.50f};
  static float[] P055 = {-230.41f, 559.84f, 8473.23f};
  static float[] P056 = {-698.66f, 320.83f, 7902.59f};
  static float[] P057 = {-643.29f, -299.16f, 7902.59f};
  static float[] P058 = {-341.47f, -719.30f, 7902.59f};
  static float[] P059 = {252.57f, -756.12f, 7902.59f};
  static float[] P060 = {458.39f, -265.31f, 9355.44f};
  static float[] P062 = {224.04f, 338.75f, 9450.30f};
  static float[] P063 = {-165.71f, 341.04f, 9462.35f};
  static float[] P064 = {-298.11f, 110.13f, 10180.37f};
  static float[] P065 = {-473.99f, -219.71f, 9355.44f};
  static float[] P066 = {-211.97f, -479.87f, 9355.44f};
  static float[] P067 = {192.86f, -491.45f, 9348.73f};
  static float[] P068 = {-136.29f, -319.84f, 1228.73f};
  static float[] P069 = {1111.17f, -314.14f, 1314.19f};
  static float[] P070 = {-1167.34f, -321.61f, 1319.45f};
  static float[] P071 = {1404.86f, -306.66f, 1235.45f};
  static float[] P072 = {-1409.73f, -314.14f, 1247.66f};
  static float[] P073 = {1254.01f, -296.87f, 1544.58f};
  static float[] P074 = {-1262.09f, -291.70f, 1504.26f};
  static float[] P075 = {965.71f, -269.26f, 1742.65f};
  static float[] P076 = {-900.97f, -276.74f, 1726.07f};
  static float[] iP068 = {-136.29f, -319.84f, 1228.73f};
  static float[] iP069 = {1111.17f, -314.14f, 1314.19f};
  static float[] iP070 = {-1167.34f, -321.61f, 1319.45f};
  static float[] iP071 = {1404.86f, -306.66f, 1235.45f};
  static float[] iP072 = {-1409.73f, -314.14f, 1247.66f};
  static float[] iP073 = {1254.01f, -296.87f, 1544.58f};
  static float[] iP074 = {-1262.09f, -291.70f, 1504.26f};
  static float[] iP075 = {965.71f, -269.26f, 1742.65f};
  static float[] iP076 = {-900.97f, -276.74f, 1726.07f};
  static float[] P077 = {1058.00f, -448.81f, 8194.66f};
  static float[] P078 = {-1016.51f, -456.43f, 8190.62f};
  static float[] P079 = {-1515.96f, -676.45f, 7754.93f};
  static float[] P080 = {1856.75f, -830.34f, 7296.56f};
  static float[] P081 = {1472.16f, -497.38f, 7399.68f};
  static float[] P082 = {-1775.26f, -829.51f, 7298.46f};
  static float[] P083 = {911.09f, -252.51f, 7510.99f};
  static float[] P084 = {-1451.94f, -495.62f, 7384.30f};
  static float[] P085 = {1598.75f, -669.26f, 7769.90f};
  static float[] P086 = {-836.53f, -250.08f, 7463.25f};
  static float[] P087 = {722.87f, -158.18f, 8006.41f};
  static float[] P088 = {-688.86f, -162.28f, 7993.89f};
  static float[] P089 = {-626.92f, -185.30f, 8364.98f};
  static float[] P090 = {647.72f, -189.46f, 8354.99f};
  static float[] P091 = {0.00f, 835.01f, 5555.62f};
  static float[] P092 = {0.00f, 1350.18f, 5220.86f};
  static float[] P093 = {0.00f, 1422.94f, 5285.27f};
  static float[] P094 = {0.00f, 1296.75f, 5650.19f};
  static float[] P095 = {0.00f, 795.63f, 6493.88f};
  static float[] iP091 = {0.00f, 835.01f, 5555.62f};
  static float[] iP092 = {0.00f, 1350.18f, 5220.86f};
  static float[] iP093 = {0.00f, 1422.94f, 5285.27f};
  static float[] iP094 = {0.00f, 1296.75f, 5650.19f};
  static float[] iP095 = {0.00f, 795.63f, 6493.88f};
  static float[] P097 = {-194.91f, -357.14f, 10313.32f};
  static float[] P098 = {135.35f, -357.66f, 10307.94f};
  static float[] iP097 = {-194.91f, -357.14f, 10313.32f};
  static float[] iP098 = {135.35f, -357.66f, 10307.94f};
  static float[] P099 = {-380.53f, -221.14f, 9677.98f};
  static float[] P100 = {0.00f, 412.99f, 9629.33f};
  static float[] P102 = {59.51f, -412.55f, 10677.58f};
  static float[] iP102 = {59.51f, -412.55f, 10677.58f};
  static float[] P103 = {6.50f, 484.74f, 9009.94f};
  static float[] P105 = {-41.86f, 476.51f, 9078.17f};
  static float[] P108 = {49.20f, 476.83f, 9078.24f};
  static float[] P110 = {-187.62f, -410.04f, 10674.12f};
  static float[] iP110 = {-187.62f, -410.04f, 10674.12f};
  static float[] P111 = {-184.25f, -318.70f, 10723.88f};
  static float[] iP111 = {-184.25f, -318.70f, 10723.88f};
  static float[] P112 = {-179.61f, -142.81f, 10670.26f};
  static float[] P113 = {57.43f, -147.94f, 10675.26f};
  static float[] P114 = {54.06f, -218.90f, 10712.44f};
  static float[] P115 = {-186.35f, -212.09f, 10713.76f};
  static float[] P116 = {205.90f, -84.61f, 10275.97f};
  static float[] P117 = {-230.96f, -83.26f, 10280.09f};
  static float[] iP118 = {216.78f, -509.17f, 10098.94f};
  static float[] iP119 = {-313.21f, -510.79f, 10102.62f};
  static float[] P118 = {216.78f, -509.17f, 10098.94f};
  static float[] P119 = {-313.21f, -510.79f, 10102.62f};
  static float[] P120 = {217.95f, 96.34f, 10161.62f};
  static float[] P121 = {71.99f, -319.74f, 10717.70f};
  static float[] iP121 = {71.99f, -319.74f, 10717.70f};
  static float[] P122 = {0.00f, 602.74f, 5375.84f};
  static float[] iP122 = {0.00f, 602.74f, 5375.84f};
  static float[] P123 = {-448.94f, -203.14f, 9499.60f};
  static float[] P124 = {-442.64f, -185.20f, 9528.07f};
  static float[] P125 = {-441.07f, -148.05f, 9528.07f};
  static float[] P126 = {-443.43f, -128.84f, 9499.60f};
  static float[] P127 = {-456.87f, -146.78f, 9466.67f};
  static float[] P128 = {-453.68f, -183.93f, 9466.67f};
  static float[] P129 = {428.43f, -124.08f, 9503.03f};
  static float[] P130 = {419.73f, -142.14f, 9534.56f};
  static float[] P131 = {419.92f, -179.96f, 9534.56f};
  static float[] P132 = {431.20f, -199.73f, 9505.26f};
  static float[] P133 = {442.28f, -181.67f, 9475.96f};
  static float[] P134 = {442.08f, -143.84f, 9475.96f};

}
